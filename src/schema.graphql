type Mutation {
  createUser(data: CreateUserInput): AuthPaylod!
  updateUser(data: UpdateUserInput): User!
  deleteUser(id: ID!): User!
  loginUser(data: LoginUserInput!): AuthPaylod!
#  publisher
  createpublisher(data: CreatePublisherInput): Publisher!
  updatepublisher(data: UpdatePublisherInput): Publisher!
  deletepublisher(id: ID!): Publisher!

# classRooms
 createclassRooms(data: CreateclassRoomInput): classRoom!
updateclassRooms(data: UpdateclassRoomInput): classRoom!
deleteclassRooms(id: ID!): classRoom!
# Catogory
createCatogory(data: CreateCatogoryInput): Catogory!
updateCatogory(data: UpdateCatogoryInput): Catogory!
deleteCatogory(id: ID!): Catogory!
# PubliserYear
createPubliserYear(data: CreatePubliserYearInput): PubliserYear!
updatePubliserYear(data: UpdatePubliserYearInput):PubliserYearrYear!
deletePubliserYear(id: ID!): PubliserYear!
# Catogory
createCatogory(data: CreateCatogoryInput): Catogory!
updateCatogory(data: UpdateCatogoryInput):Catogory!
deleteCatogory(id: ID!): Catogory!
# publiserYears
createpubliserYears(data: CreatepubliserYearsInput): publiserYears!
updatepubliserYears(data: UpdatepubliserYearsInput):publiserYears!
deletepubliserYears(id: ID!): publiserYears!
# Author
createAuthor(data: CreateAuthorInput): Author!
updateAuthor(data: UpdateAuthorInput):Author!
deleteAuthor(id: ID!): Author!
# Vedio
createVedio(data: CreateVedioInput): Vedio!
updateVedio(data: UpdateVedioInput):Vedio!
deleteVedio(id: ID!): Vedio!
# Catogory
createCatogory(data: CreateCatogoryInput): Catogory!
updateCatogory(data: UpdateCatogoryInput):Catogory!
deleteCatogory(id: ID!): Catogory

# Books
createBook(data: CreateBookInput): Book!
updateBook(data: UpdateBookInput):Book!
deleteBook(id: ID!Book!
# Subject
createSubject(data: CreateSubjectInput): Subject!
updateSubject(data: UpdateSubjectInput):Subject!
deleteSubject(id: ID!Book!

# BookTest
createBookTest(data: CreateBookTestInput): BookTest!
updateBookTest(data: UpdateBookTestInput):BookTest!
deleteBookTest(id: ID!BookTest!



# Questions
createQuestions(data: CreateQuestionsInput): Questions!
updateQuestions(data: UpdateQuestionsInput):Questions!
deleteQuestions(id: ID!Book!

# couress

}

type Query {

users: [User!]!
user(id: ID!): User

publishers(query:String):[Publisher!]!
publisher(id:ID!):publisher!

classRooms(query:String):[classRoom!]!
classRoom(id:ID!):ClassRoom!

catogorys:(query:String):[Catogory!]!
catogory:(id:ID!):Catogory!

publiserYears:(query:String):[PubliserYear!]!-
publiserYear:(id:ID):publiserYear!

couress:(query:String):[Couress!]!
coures:(id:ID!):Couress!

authors:(query:String):[Author!]!
author:(id:ID!):Author!

videos:(query:String):[Vedio!]!
vedio:(id:ID):Vedio!

catogorys:(query:String):[Catogory!]!
catogory:(id:ID):Catogory!

books:(query:String):[Book!]!
book:(id:ID!):Book!

subjects:(query:StringSubject!]!
subject:(id:ID):Subject!

bookTests:(query:String):[BookTest!]!
bookTest:(id:ID!):BookTest!

questions:(query:String):[Questions!]!
question:(id:ID!):Questions!
}


type Publisher {
  id: ID!
  title: String!
  slug: String!
  description: String
  phoneNumber: String
  address: String
  books: [Books!]!
  order: Int!
  isListed: Boolean!
}

type ClassRoom {
  id: ID!
  title: String!
  slug: String!
  description: String
  isListed: Boolean!
  status: Int!
  books: [Books!]!
}


type PubliserYear {
  id: ID!
  title: String!
  slug: String!
  description: String
  isListed: Boolean!
  status: Int!
  books: [Books!]!
}

# startCouress
type Couress {
  id: ID!
  title: String!
  description: String
  books: [Books!]!
  isListed: Boolean!
  status: Int!
}

type Catogory {
  id: ID!
  title: String!
  description: String
  books: [Books!]!
  isListed: Boolean!
  status: Int!
}

type Author {
  id: ID!
  title: String!
  description: String
  books: [Books!]!
  isListed: Boolean!
  status: Int!
  slug: String!
}

type Book {
  id: ID!
  title: String!
  slug: String!
  isbn: String
  size: String
  price: Int!
  shopeLink: String
  cover: String
  photos: [String!]!
  author: [Author!]!
  couress: [Couress!]!
  catogory: [Catogory!]!
  publiserYear: [PubliserYear!]!
  publisher: [Publisher!]!
  classRoom: [ClassRoom!]!
  isListed: Boolean!
  description: String
  status: Int!
  subjects: [subjects!]!
}

type Subject {
  id: ID!
  title: String!
  description: String
  books: [Books!]!
  isListed: Boolean!
  status: Int!
  videos: [Vedio!]!
}




# end subjects
type BookTest {
  id: ID!
  title: String!
  questions: [Questions!]!
  isListed: Boolean!
  status: Int!
}
type Questions {
  id: ID!
  title: String!
  questions: [Questions!]!
  videos: [Vedio!]!
  correctAnswer: String
  bookTest: [BookTest!]!
  status: Int!
}



type Vedio {
  id: ID!
  title: String!
  vedioSourse: String!
  vedioUrl: String!
  subjects: [Subject!]!
  questions: [Questions!]!
  order: Int!
  status: String!
}
type User {
  id: ID!
  email: String!
  password: String!
  name: String!
}



type AuthPaylod {
  token: String!
  user: User!
}
type UpludePayload {
  photo: String!
}

# input  all  items


input LoginUserInput {
  email: String!
  password: String!
}
input UpdateUserInput {
  email: String
  password: String
  name: String
}


input CreateUserInput {
  email: String!
  password: String!
  name: String!
}



input CreatePublisherInput{

}
input UpdatePublisherInput{


}
input CreateclassRoomInput{
     correctAnswer:String!

}
input UpdateclassRoomInput{
correctAnswer:String!
}
input CreateCatogoryInput{

}
input UpdateCatogoryInput
input CreatePubliserYearInput{

}
input UpdatePubliserYearInput{

}
input CreateCatogoryInput{

}
input UpdateCatogoryInput{

}
input CreatepubliserYearsInput{

}
input UpdatepubliserYearsInput{

}
input CreateAuthorInput{

}
input UpdateAuthorInput{

}
input CreateVedioInput{

}
input UpdateVedioInput{

}
input CreateCatogoryInput{

}
input UpdateCatogoryInput{

}
input CreateBookInput{

}
input UpdateBookInput
input CreateSubjectInput{
title:String!
description:String!
}
input UpdateSubjectInput{
title:String!
description:String!
}
input CreateBookTestInput{

}
input UpdateBookTestInput{

}
input CreateQuestionsInput{

}
input UpdateQuestionsInput{

}
